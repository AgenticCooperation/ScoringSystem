version: '3.8'

services:
  # PostgreSQL Veritabanı
  postgres:
    image: postgres:15-alpine
    container_name: abiss_postgres
    environment:
      POSTGRES_DB: abiss_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - abiss_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d abiss_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ABISS FastAPI Uygulaması
  abiss:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: abiss_app
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/abiss_db
      ALLOW_ORIGINS: '["*"]'
      TELEMETRY_SCHEMA_VERSION: "1.0"
      APP_NAME: "ABISS - Advanced Backend Intelligence Scoring System"
      APP_VERSION: "1.0.0"
      DEBUG: "true"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - abiss_network
    restart: unless-stopped
    volumes:
      - ./app:/app/app:ro
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running Alembic migrations...' &&
        alembic upgrade head &&
        echo 'Starting ABISS application...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "


volumes:
  postgres_data:
    driver: local

networks:
  abiss_network:
    driver: bridge
